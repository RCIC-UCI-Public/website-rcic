.. _login:

Logging in
==========

To connect to an HPC3 login node use:

:server name:
  :tt:`hpc3.rcic.uci.edu` there are several load-balanced systems
:login name: 
  your UCINetID
:password: 
  your password associated with your UCINetID

Please make sure you have enabled your DUO device using
`UCI’s Duo infrastructure <https://www.oit.uci.edu/services/accounts-passwords/duo/>`_

.. _ssh login:

Login with ssh
---------------

:term:`SSH` is the only way to directly log in to HPC3 for interactive use and 
we require multi-factor authentication for all password-based logins.

.. _ssh password duo:

Password authentication with automated DUO push
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Password authentication with automated DUO push on your phone
is the most common mode for DUO authentication. It requires your phone to have 
internet access to receive the push notification from DUO and to send your 
approval/denial back to DUO’s servers. 

You access HPC3 via your favorite SSH (SCP, SFTP) client from your laptop and then respond to the DUO app on your phone.
In this scenario HPC3 does not prompt you for DUO authentication. Instead the only DUO notification is on your phone.

**Step by Step**

- You must either be on the campus network or connected to the
  `UCI campus VPN <https://www.oit.uci.edu/help/vpn>`_.
- To use ssh, you need to use one of **Terminal** applications and depending on a
  user laptop they are listed in :ref:`laptop apps`.

1. **Run ssh command**

   Your login name can be specified as ether :tt:`user@hostname` or given with the :tt:`-l` option,
   for example a user with UCINetID *panteater* can use one of the following:

  .. code-block:: console

     ssh panteater@hpc3.rcic.uci.edu
     ssh hpc3.rcic.uci.edu -l panteater

  When prompted for a password please enter password followed by :guilabel:`Return` key.
  Note, password will not be visible when typed:

  .. code-block:: console

     Password:

2. **Respond do  multi-factor authentication prompts**

   Next, you will be prompted to enter a code (backup or generated by your DUO device)
   or request a push to your enrolled DUO-enabled device. A prompt looks similar to:

   .. code-block:: text

      Duo two-factor login for panteater

      Enter a passcode or select one of the following options:

       1. Duo Push to XXX-XXX-1234

      Passcode or option (1-1): 


   Type desired option (in this example *1*).

   .. code-block:: text
   
      Passcode or option (1-1): 1

3. **Use DUO on your phone**

   Now use the DUO app on your phone and respond to the received DUO
   notification. Press :guilabel:`Approve` on your DUO app when prompted.
   If the DUO authentication is successful you will see on your laptop:

   .. code-block:: text

      Success. Logging you in...
      Last login:  ....

After a successful login you will see a screen similar to the following:

.. code-block:: text

   +-----------------------------------------+
   |  _             _             _ _ ____   |
   | | | ___   __ _(_)_ __       (_) | ___|  |
   | | |/ _ \ / _` | | '_ \ _____| | |___ \  |
   | | | (_) | (_| | | | | |_____| | |___) | |
   | |_|\___/ \__, |_|_| |_|     |_|_|____/  |
   |          |___/                          |
   +-----------------------------------------+
    Distro:  Rocky 8.7 Green Obsidian
    Virtual: NO

    CPUs:    40
    RAM:     191.8GB
    BUILT:   2022-08-30 14:02

    ACCEPTABLE USE: https://rcic.uci.edu/documents/RCIC-Acceptable-Use-Policy.pdf

   [anteater@login-x:~]$

.. _ssh keys:

Key-based ssh authentication
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

If you choose to use key-based authentication for your login, you have additional responsibilities:

* **Every user-generated ssh key MUST have a non-empty passphrase**.
  It is a requirement per our :ref:`acceptable use` policy 
* **NEVER add a different user's ssh public into your authorized_keys file**. This is a violation of account sharing. 
* **Generate a different private key and password for each device you plan to use**
  for accessing HPC3.  For example, if you two different laptops, generate a private key for each laptop.
* **Treat all of your ssh private keys with care**. If you are on a shared system (e.g. a lab workstation), make sure
  that file permissions are set such you (and only you) can read and unlock the key with its passphrase.
* If you don't want to keep re-entering your passphrase, you should learn how to manage your ssh keys with the help of ssh agents.
  This provides a convenience of a "passwordless" ssh key, but has all the security of a password-protected key.

  Depending on your laptop, use the following guides:

  :Linux: `ssh-agent <https://www.ssh.com/academy/ssh/agent>`_
  :Windows: `PuTTY/Pageant <https://winscp.net/eng/docs/ui_pageant>`_
  :Windows: `Powershell <https://docs.microsoft.com/en-us/windows-server/administration/openssh/openssh_keymanagement>`_
  :MaxOS: `Proper use of ssh-client <https://www.getpagespeed.com/work/proper-use-of-ssh-client-in-mac-os-x>`_

See more :ref:`ssh tutorials` links for more details.

Generate your ssh keys per one of the guides (for OpenSSH see :ref:`generate ssh keys`).

In essence:

- the system from which you are initiating ssh (e.g. your laptop or workstation) should 
  have a locally-generated and *password protected* ssh private key. 
- the public key corresponding to that private key is placed on HPC3
  in your   :tt:`$HOME/.ssh/authorized_keys` file.

Once your keys are setup simply use ssh commands.
For example a user with UCINetID *panteater* can use one of the following:

  .. code-block:: console

     ssh panteater@hpc3.rcic.uci.edu
     ssh hpc3.rcic.uci.edu -l panteater

.. _generate ssh keys:

Generate ssh keys 
^^^^^^^^^^^^^^^^^

Here we describe how to generate ssh keys  on your laptop and how to copy
a public key to your account on the HPC3 cluster.

Here we assume ssh is from OpenSSH, for other ssh versions please
use your specific software instructions.

1. Check ssh version

   .. code-block:: console

      ssh -V
      OpenSSH_8.6p1, LibreSSL 3.3.6

2. Create ssh keys

   .. code-block:: console

      ssh-keygen -t rsa -f myhpc  (choose a desired name, usually a single word)

   The above command will generate two files :tt:`myhpc` is  a private key
   and :tt:`myhpc.pub`  is a corresponding public key. They always are 
   generated and work as a pair. 

   .. important:: | Private key should NEVER be shared
                  | Use a passphrase for your key (remember it)

3. Transfer the public key from your laptop to your account on HPC3

   You will be prompted for the standard DUO authentication
   and password to run this command.

   .. code-block:: console

      cd ~/.ssh
      ssh-copy-id -i myhpc ucinetid@hpc3.rcic.uci.edu

   UCInetID is your account. The key will be placed into your 
   HPC3 home directory :tt:`$HOME/.ssh/authorized_keys file`


.. _ssh xforward:

Ssh and Xforward
^^^^^^^^^^^^^^^^

If you want X-windows graphics to be forwarded through your ssh connection,
then you should use the :tt:`-X` option in your ssh command:

  .. code-block:: console

     ssh -X panteater@hpc3.rcic.uci.edu
	    or 
     ssh -X hpc3.rcic.uci.edu -l panteater


Using FileZilla and DUO 
------------------------

If you use FileZilla (Windows users) for files transfer you will need to
change your login type to interactive in :guilabel:`FileZilla Site Manger` settings. 
For exact instructions please see `Filezilla Site Manger <https://wiki.filezilla-project.org/Site_Manager>`_

.. image:: images/filezilla.png
   :align: center
   :alt: site manager settings 

FileZilla with SSH keys 
^^^^^^^^^^^^^^^^^^^^^^^

Sometimes it is more convenient to use SSH keys based authentication (in place of DUO).
There are three mechanisms for use of the FileZilla client with SSH-2 keys.

Once you :ref:`generate ssh keys` see the detailed instructions for the
`FileZilla SSH key based authentication <https://wiki.filezilla-project.org/Howto#SFTP_using_SSH-2:_Key_based_authentication>`_
mechanisms to setup your FileZilla client.

.. _mobaxterm duo:

Using  MobaXterm and DUO 
------------------------

Make sure that in your MobaXterm :guilabel:`SSH tab -> Advanced ssh settings`
your :guilabel:`Remote Environment` is set to **Interative shell**:

.. image:: images/mobaxterm.png
   :align: center
   :alt: advanced ssh settings 

.. attention::

   :red:`MobaXterm users DO NOT enable Remote monitoring!`
   See :ref:`mobaxterm monitoring` for more info.

